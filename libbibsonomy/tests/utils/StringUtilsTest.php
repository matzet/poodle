<?php

require_once '../../utils/StringUtils.php';

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-07-18 at 12:51:08.
 */
class StringUtilsTest extends PHPUnit_Framework_TestCase {

        
    const TEST_VALUE1 = "test";
    const TEST_VALUE2 = "hurz";
    const SPECIAL_CHARS = "üöä!\"§$%&/()=,.-+#'´`";
    
    /**
     * @var StringUtils
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new StringUtils;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers StringUtils::removeNonLettersOrDotsOrCommaOrSemicolonOrSpace
     * @todo   Implement testRemoveNonLettersOrDotsOrCommaOrSemicolonOrSpace().
     */
    public function testRemoveNonLettersOrDotsOrCommaOrSemicolonOrSpace() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::cleanTitle
     * @todo   Implement testCleanTitle().
     */
    public function testCleanTitle() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::cleanTitle2
     * @todo   Implement testCleanTitle2().
     */
    public function testCleanTitle2() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::split
     * @todo   Implement testSplit().
     */
    public function testSplit() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::extractDateYearFromTitleSource
     * @todo   Implement testExtractDateYearFromTitleSource().
     */
    public function testExtractDateYearFromTitleSource() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::extractYear
     * @todo   Implement testExtractYear().
     */
    public function testExtractYear() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::splitTitleSource
     * @todo   Implement testSplitTitleSource().
     */
    public function testSplitTitleSource() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::extractJournalTitle
     * @todo   Implement testExtractJournalTitle().
     */
    public function testExtractJournalTitle() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::extractYearFromTitleSource
     * @todo   Implement testExtractYearFromTitleSource().
     */
    public function testExtractYearFromTitleSource() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::extractVolume
     * @todo   Implement testExtractVolume().
     */
    public function testExtractVolume() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::extractIssue
     * @todo   Implement testExtractIssue().
     */
    public function testExtractIssue() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::extractPage
     * @todo   Implement testExtractPage().
     */
    public function testExtractPage() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::toStringArray
     * @todo   Implement testToStringArray().
     */
    public function testToStringArray() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::utf8_urldecode
     * @todo   Implement testUtf8_urldecode().
     */
    public function testUtf8_urldecode() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::toASCII
     * @todo   Implement testToASCII().
     */
    public function testToASCII() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers StringUtils::html_entity_decode_numeric
     * @todo   Implement testHtml_entity_decode_numeric().
     */
    public function testHtml_entity_decode_numeric() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }
    
    /**
     * 
     */
    public function testRemoveNonNumbers() {
        
        $strings = array("123test", "test123", "t1e2s3t");
        
        foreach($strings as $str) {
            $this->assertEquals("123", StringUtils::removeNonNumbers($str));
        }
    }
    
    /**
     * 
     */
    public function testRemoveNonNumbersOrLetters() {
        $this->assertEquals(self::TEST_VALUE1, StringUtils::removeNonNumbersOrLetters("!-test-!"));
        $this->assertEquals(self::TEST_VALUE1, StringUtils::removeNonNumbersOrLetters(" !-test-! "));
    }
    
    
    /**
        * tests removeNonNumbersOrLettersOrDotsOrCommaOrSpace
        */

    public function testRemoveNonNumbersOrLettersOrDotsOrCommaOrSpace() {
        
        $res = StringUtils::removeNonNumbersOrLettersOrDotsOrCommaOrSpace(",...!-test-!...,");
        error_log($res);
        $this->assertEquals(",...test...,", $res);
        $res = StringUtils::removeNonNumbersOrLettersOrDotsOrCommaOrSpace(",. . .!-test-!. . .,");
        error_log($res);
        $this->assertEquals(",. . .test. . .,", $res);
    }
    

    /**
     * tests getStringFromList
     */
    public function testGetStringFromList() {
        
        $this->assertEquals("[]", StringUtils::getStringFromList(array()));

        $someStrings = array();
        foreach (array( 1, 2, 3 ) as $i) {
            $someStrings[] = self::TEST_VALUE1 . $i;
        }
        $str = StringUtils::getStringFromList($someStrings);
        error_log($str);
        $this->assertEquals("[test1,test2,test3]", $str);
    }

    
}
