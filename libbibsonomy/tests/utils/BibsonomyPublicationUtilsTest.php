<?php

require_once '../../utils/BibsonomyPublicationUtils.php';
require_once '../../SimpleRecord.php'; 
require_once '../../FullBibtexRecord.php';
require_once '../../SimpleEntrytypeMapper.php';
       
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-07-18 at 12:51:08.
 */
class BibsonomyPublicationUtilsTest extends PHPUnit_Framework_TestCase {


    protected $publication;
    protected $title;
    protected $year;
    protected $type;
    protected $abstract;
    protected $newspaper;
    protected $month;
    protected $pages;
    protected $url;

    protected $entryTypeMapper;
    
    /**
     *
     * @var Person
     */
    protected $person;
    
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        
        $this->title = "Die Revolution der gebenden Hand";
        $this->year = 2009;
        $this->type = "newspaper";
        $this->abstract = "Die kapitalismuskritische Linke definiert das Eigentum als Diebstahl. Der größte Nehmer ist aber der moderne Staat. Wir leben in einem steuerstaatlich zugreifenden Semi-Sozialismus - und niemand ruft zum fiskalischen Bürgerkrieg auf.";
        $this->newspaper = "Frankfurter Allgemeine Zeitung";
        $this->month = "06";
        $this->pages = "26";
        $this->url = "http://www.faz.net/aktuell/feuilleton/debatten/kapitalismus/die-zukunft-des-kapitalismus-8-die-revolution-der-gebenden-hand-1812362.html";
        $this->person = new Person("Peter", "Sloterdijk");
        
        $this->entryTypeMapper = new SimpleEntrytypeMapper();
        
        $this->publication = new FullBibtexRecord(
            $this->title, 
            $this->year, 
            array($this->person), 
            array(),
            $this->type, 
            $this->abstract,
            null, 
            null, 
            null, 
            null, 
            null, 
            null, 
            null, 
            null, 
            null, 
            null, 
            $this->newspaper,
            $this->month, 
            null, 
            null, 
            null, 
            $this->pages, 
            null, 
            null, 
            null, 
            null, 
            $this->url,
            null);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers BibsonomyPublicationUtils::bibsonomyPublication2BibtexStdclass
     * @todo   Implement testBibsonomyPublication2BibtexStdclass().
     */
    public function testBibsonomyPublication2BibtexStdclass() {

        
        
        $bibtex = BibsonomyPublicationUtils::bibsonomyPublication2BibtexStdclass($this->publication, $this->entryTypeMapper);

        $this->assertTrue($bibtex->title == $this->title);
        $this->assertTrue($bibtex->year == $this->year);
        $this->assertTrue($bibtex->author == $this->person);
        $this->assertTrue($bibtex->entrytype != $this->type);
        $this->assertTrue($bibtex->bibtexAbstract == $this->abstract);
        $this->assertTrue($bibtex->pages == $this->pages);
        $this->assertTrue($bibtex->month == $this->month);
        $this->assertTrue($bibtex->url == $this->url);
        $this->assertTrue($bibtex->journal == $this->newspaper);
        
    }


    /**
     * @covers BibsonomyPublicationUtils::getFirstRelevantWord
     */
    public function testGetFirstRelevantWord() {
        $word = BibsonomyPublicationUtils::getFirstRelevantWord($this->title);
        $this->assertEquals("Revolution", $word);
    }

    /**
     * The BibtexKey should be generated from lastname of first author, the
     * year and the first relevant word of the title (all 
     * in lower case letters)
     * 
     * @covers BibsonomyPublicationUtils::generateBibtexKey
     */
    public function testGenerateBibtexKey() {
        
        $expectedBibtexKey = "sloterdijk2009revolution";
        $bibtexKey = BibsonomyPublicationUtils::generateBibtexKey(
            array($this->person), 
            array(), 
            $this->year, 
            $this->title
        );
        
        $this->assertTrue($bibtexKey == $expectedBibtexKey);
    }
    

    /**
     * @covers BibsonomyPublicationUtils::getMiscProp
     * @todo   Implement testGetMiscProp().
     */
    public function testGetMiscProp() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    
    /**
     * @covers BibsonomyPublicationUtils::addRequiredFields
     * @todo   Implement testAddRequiredFields().
     */
    public function testAddRequiredFields() {
        
        $pub = new SimpleRecord("", "", array(), null);
        
        $bibtex = BibsonomyPublicationUtils::addRequiredFields(BibsonomyPublicationUtils::bibsonomyPublication2BibtexStdclass($pub));
        
        $this->assertEquals($bibtex->author, "noauthor");
        $this->assertEquals($bibtex->year, "nodate");
        $this->assertEquals($bibtex->title, "notitle");
        $this->assertEquals($bibtex->entrytype, "misc");
    }

}
